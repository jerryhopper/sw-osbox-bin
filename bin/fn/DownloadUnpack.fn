

DownloadUnpack(){
      ORG_NAME=$1
      REPO_NAME=$2
      LATEST_VERSION=$3
      BIN_DIR=$4


      # Check the download url, if it responds with 200
      DOWNLOAD_CODE=$(curl -L -s -o /dev/null -I -w "%{http_code}" https://github.com/${ORG_NAME}/${REPO_NAME}/archive/${LATEST_VERSION}.tar.gz)
      if [ "$DOWNLOAD_CODE" != "200" ];then
        log "Download error! (${DOWNLOAD_CODE}) [https://github.com/${ORG_NAME}/${REPO_NAME}/archive/${LATEST_VERSION}.tar.gz]"
        exit 1
      fi

      # Download the file
      #log "Downloading https://github.com/${ORG_NAME}/${REPO_NAME}/archive/${LATEST_VERSION}.tar.gz"
      curl -s -L -o ${REPO_NAME}.tar.gz https://github.com/${ORG_NAME}/${REPO_NAME}/archive/${LATEST_VERSION}.tar.gz >/dev/null
      if [ $? != 0 ]; then
        log "Error during download"
        exit 1
      fi

      if [ ! -d ${BIN_DIR} ];then
          mkdir -p ${BIN_DIR}
      fi

      log "Extracting ${LATEST_VERSION}.tar.gz"
      tar -C ${BIN_DIR} -xvf ${REPO_NAME}.tar.gz --strip 1 >/dev/null

      if [ $? != 0 ]; then
        log "Error during extraction"
        exit 1
      fi


      rm -rf ${REPO_NAME}.tar.gz
      if [ $? != 0 ]; then
        log "Error removing tar archive"
        exit 1
      fi

}
